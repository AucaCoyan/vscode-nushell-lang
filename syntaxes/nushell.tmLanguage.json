{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "nushell",
  "scopeName": "source.nushell",
  "patterns":
  [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#range"
    },
    {
      "include": "#parameter"
    },
    {
      "include": "#digit"
    },
    {
      "include": "#blockparam"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#function"
    },
    {
      "include": "#type"
    }
  ],
  "repository":
  {
    "keywords":
    {
      "patterns":
      [
        {
          "name": "keyword.other.a",
          "match": "\\bagg"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bagg-groups"
        },
        {
          "name": "keyword.other.a",
          "match": "\\balias"
        },
        {
          "name": "keyword.other.a",
          "match": "\\ball-false"
        },
        {
          "name": "keyword.other.a",
          "match": "\\ball-true"
        },
        {
          "name": "keyword.other.a",
          "match": "\\ball\\?"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bansi(\\sgradient|\\sstrip)?\\b"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bany\\?"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bappend"
        },
        {
          "name": "keyword.other.a",
          "match": "\\barg-max"
        },
        {
          "name": "keyword.other.a",
          "match": "\\barg-min"
        },
        {
          "name": "keyword.other.a",
          "match": "\\barg-sort"
        },
        {
          "name": "keyword.other.a",
          "match": "\\barg-true"
        },
        {
          "name": "keyword.other.a",
          "match": "\\barg-unique"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bas"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bas-date"
        },
        {
          "name": "keyword.other.a",
          "match": "\\bas-datetime"
        },
        {
          "name": "keyword.other.b",
          "match": "\\bbenchmark"
        },
        {
          "name": "keyword.other.b",
          "match": "\\bbuild-string"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcache"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcal"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcd"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bchar"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bclear"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcol"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcollect"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcolumns"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcompact"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcomplete"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bconcatenate"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bconfig(\\senv|\\snu)?\\b"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcontains"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcount"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcount-null"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcp"
        },
        {
          "name": "keyword.other.c",
          "match": "\\bcumulative"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdate(\\sformat|\\shumanize|\\slist-timezone|\\snow|\\sto-record|\\sto-table|\\sto-timezone)?\\b"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdb(\\sand|\\sas|\\scol|\\scollect|\\sdescribe|\\sfn|\\sfrom|\\sgroup-by|\\sjoin|\\slimit|\\sopen|\\sor|\\sorder-by|\\sover|\\squery|\\sschema|\\sselect|\\stesting|\\swhere)?\\b"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdebug"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdecode"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdef"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdef-env"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdefault"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdescribe"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdetect(\\scolumns)?\\b"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdf-not"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdo"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdrop(\\scolumn|\\snth)?\\b"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdrop-duplicates"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdrop-nulls"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdtypes"
        },
        {
          "name": "keyword.other.d",
          "match": "\\bdu"
        },
        {
          "name": "keyword.other.e",
          "match": "\\beach(\\swhile)?\\b"
        },
        {
          "name": "keyword.other.e",
          "match": "\\becho"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bempty\\?"
        },
        {
          "name": "keyword.other.e",
          "match": "\\benter"
        },
        {
          "name": "keyword.other.e",
          "match": "\\benv"
        },
        {
          "name": "keyword.other.e",
          "match": "\\berror(\\smake)?\\b"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bevery"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bexec"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bexit"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bexplode"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bexport(\\salias|\\sdef|\\sdef-env|\\senv|\\sextern)?\\b"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bexpr-not"
        },
        {
          "name": "keyword.other.e",
          "match": "\\bextern"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfetch"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfill-na"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfill-null"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfilter-with"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfind"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfirst"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bflatten"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfmt"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfor"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bformat(\\sfilesize)?\\b"
        },
        {
          "name": "keyword.other.f",
          "match": "\\bfrom(\\scsv|\\seml|\\sics|\\sini|\\sjson|\\snuon|\\sods|\\sssv|\\stoml|\\stsv|\\surl|\\svcf|\\sxlsx|\\sxml|\\syaml|\\syml)?\\b"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bg"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-day"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-hour"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-minute"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-month"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-nanosecond"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-ordinal"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-second"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-week"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-weekday"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bget-year"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bglob"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bgrid"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bgroup"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bgroup-by"
        },
        {
          "name": "keyword.other.g",
          "match": "\\bgstat"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bhash(\\sbase64|\\smd5|\\ssha256)?\\b"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bheaders"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bhelp"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bhide"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bhistogram"
        },
        {
          "name": "keyword.other.h",
          "match": "\\bhistory"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bif"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bignore"
        },
        {
          "name": "keyword.other.i",
          "match": "\\binc"
        },
        {
          "name": "keyword.other.i",
          "match": "\\binput"
        },
        {
          "name": "keyword.other.i",
          "match": "\\binsert"
        },
        {
          "name": "keyword.other.i",
          "match": "\\binto(\\sbinary|\\sbool|\\sdatetime|\\sdecimal|\\sduration|\\sfilesize|\\sint|\\sstring)?\\b"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-admin"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-duplicated"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-in"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-not-null"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-null"
        },
        {
          "name": "keyword.other.i",
          "match": "\\bis-unique"
        },
        {
          "name": "keyword.other.j",
          "match": "\\bjoin"
        },
        {
          "name": "keyword.other.k",
          "match": "\\bkeep(\\suntil|\\swhile)?\\b"
        },
        {
          "name": "keyword.other.k",
          "match": "\\bkeybindings(\\sdefault|\\slist|\\slisten)?\\b"
        },
        {
          "name": "keyword.other.k",
          "match": "\\bkill"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blast"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blength"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blet"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blet-env"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blines"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blist"
        },
        {
          "name": "keyword.other.l",
          "match": "\\blit"
        },
        {
          "name": "keyword.other.l",
          "match": "\\bload-env"
        },
        {
          "name": "keyword.other.l",
          "match": "\\bls"
        },
        {
          "name": "keyword.other.l",
          "match": "\\bls-df"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmatch"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmath(\\sabs|\\savg|\\sceil|\\seval|\\sfloor|\\smax|\\smedian|\\smin|\\smode|\\sproduct|\\sround|\\ssqrt|\\sstddev|\\ssum|\\svariance)?\\b"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmax"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmean"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmedian"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmelt"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmerge"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmetadata"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmin"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmkdir"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmodule"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmove"
        },
        {
          "name": "keyword.other.m",
          "match": "\\bmv"
        },
        {
          "name": "keyword.other.n",
          "match": "\\bn"
        },
        {
          "name": "keyword.other.n",
          "match": "\\bn-unique"
        },
        {
          "name": "keyword.other.n",
          "match": "\\bnth"
        },
        {
          "name": "keyword.other.n",
          "match": "\\bnu-highlight"
        },
        {
          "name": "keyword.other.o",
          "match": "\\bopen"
        },
        {
          "name": "keyword.other.o",
          "match": "\\bopen-df"
        },
        {
          "name": "keyword.other.o",
          "match": "\\botherwise"
        },
        {
          "name": "keyword.other.o",
          "match": "\\boverlay(\\sadd|\\slist|\\snew|\\sremove)?\\b"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bp"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bpar-each"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bparse"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bpath(\\sbasename|\\sdirname|\\sexists|\\sexpand|\\sjoin|\\sparse|\\srelative-to|\\ssplit|\\stype)?\\b"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bpivot"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bpost"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bprepend"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bprint"
        },
        {
          "name": "keyword.other.p",
          "match": "\\bps"
        },
        {
          "name": "keyword.other.q",
          "match": "\\bquantile"
        },
        {
          "name": "keyword.other.q",
          "match": "\\bquery(\\sjson|\\sweb|\\sxml)?\\b"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brandom(\\sbool|\\schars|\\sdecimal|\\sdice|\\sinteger|\\suuid)?\\b"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brange"
        },
        {
          "name": "keyword.other.r",
          "match": "\\breduce"
        },
        {
          "name": "keyword.other.r",
          "match": "\\bregister"
        },
        {
          "name": "keyword.other.r",
          "match": "\\breject"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brename"
        },
        {
          "name": "keyword.other.r",
          "match": "\\breplace"
        },
        {
          "name": "keyword.other.r",
          "match": "\\breplace-all"
        },
        {
          "name": "keyword.other.r",
          "match": "\\breverse"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brm"
        },
        {
          "name": "keyword.other.r",
          "match": "\\broll(\\sdown|\\sleft|\\sright|\\sup)?\\b"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brolling"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brotate"
        },
        {
          "name": "keyword.other.r",
          "match": "\\brun-external"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsample"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsave"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bselect"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bseq(\\schar|\\sdate)?\\b"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bset"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bset-with-idx"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bshape"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bshells"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bshift"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bshuffle"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsize"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bskip(\\suntil|\\swhile)?\\b"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsleep"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bslice"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsort"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsort-by"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsource"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsplit(\\schars|\\scolumn|\\srow)?\\b"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsplit-by"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bstd"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bstr(\\scamel-case|\\scapitalize|\\scollect|\\scontains|\\sdowncase|\\sends-with|\\sfind-replace|\\sindex-of|\\skebab-case|\\slength|\\slpad|\\spascal-case|\\sreplace|\\sreverse|\\srpad|\\sscreaming-snake-case|\\ssnake-case|\\sstarts-with|\\ssubstring|\\stitle-case|\\sto-datetime|\\sto-decimal|\\sto-int|\\strim|\\supcase)?\\b"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bstr-lengths"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bstr-slice"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bstrftime"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsum"
        },
        {
          "name": "keyword.other.s",
          "match": "\\bsys"
        },
        {
          "name": "keyword.other.t",
          "match": "\\btable"
        },
        {
          "name": "keyword.other.t",
          "match": "\\btake(\\suntil|\\swhile)?\\b"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bterm(\\ssize)?\\b"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto(\\scsv|\\shtml|\\sjson|\\smd|\\snuon|\\stext|\\stoml|\\stsv|\\surl|\\sxml|\\syaml)?\\b"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-csv"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-df"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-dummies"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-lazy"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-lowercase"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-nu"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-parquet"
        },
        {
          "name": "keyword.other.t",
          "match": "\\bto-uppercase"
        },
        {
          "name": "keyword.other.t",
          "match": "\\btouch"
        },
        {
          "name": "keyword.other.t",
          "match": "\\btranspose"
        },
        {
          "name": "keyword.other.t",
          "match": "\\btutor"
        },
        {
          "name": "keyword.other.u",
          "match": "\\bunalias"
        },
        {
          "name": "keyword.other.u",
          "match": "\\buniq"
        },
        {
          "name": "keyword.other.u",
          "match": "\\bunique"
        },
        {
          "name": "keyword.other.u",
          "match": "\\bupdate(\\scells)?\\b"
        },
        {
          "name": "keyword.other.u",
          "match": "\\bupsert"
        },
        {
          "name": "keyword.other.u",
          "match": "\\burl(\\shost|\\spath|\\squery|\\sscheme)?\\b"
        },
        {
          "name": "keyword.other.u",
          "match": "\\buse"
        },
        {
          "name": "keyword.other.v",
          "match": "\\bvalue-counts"
        },
        {
          "name": "keyword.other.v",
          "match": "\\bvar"
        },
        {
          "name": "keyword.other.v",
          "match": "\\bversion"
        },
        {
          "name": "keyword.other.v",
          "match": "\\bview-source"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwatch"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwhen"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwhere"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwhich"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwindow"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwith-column"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwith-env"
        },
        {
          "name": "keyword.other.w",
          "match": "\\bwrap"
        },
        {
          "name": "keyword.other.z",
          "match": "\\bzip"
        }
      ]
    },
    "strings":
    {
      "name": "string.quoted.double.nushell",
      "begin": "\"|'|`",
      "end": "\"|'|`"
    },
    "variable":
    {
      "match": "(alias|let|let-env)\\s+[\\$'\"]?([a-z A-Z0-9_-]+)['\"]?|(\\$[a-zA-Z0-9_\\-]+)|(\\|)([$a-zA-Z0-9-]+)[\\s,]+([$a-zA-Z0-9-]+)(\\|)",
      "name": "variable.nushell",
      "captures":
      {
        "1":
        {
          "name": "keyword.other.nushell"
        },
        "2":
        {
          "name": "variable.name.nushell"
        },
        "3":
        {
          "name": "variable.name.nushell"
        },
        "4":
        {
          "name": "punctuation.nushell"
        },
        "5":
        {
          "name": "variable.name.nushell"
        },
        "6":
        {
          "name": "variable.name.nushell"
        },
        "7":
        {
          "name": "punctuation.nushell"
        }
      }
    },
    "punctuation":
    {
      "patterns":
      [
        {
          "comment": "comma",
          "name": "punctuation.comma.nushell",
          "match": ","
        },
        {
          "comment": "curly braces",
          "name": "punctuation.brackets.curly.nushell",
          "match": "[{}]"
        },
        {
          "comment": "parentheses, round brackets",
          "name": "punctuation.brackets.round.nushell",
          "match": "[()]"
        },
        {
          "comment": "semicolon",
          "name": "punctuation.semi.nushell",
          "match": ";"
        },
        {
          "comment": "square brackets",
          "name": "punctuation.brackets.square.nushell",
          "match": "[\\[\\]]"
        },
        {
          "comment": "angle brackets",
          "name": "punctuation.brackets.angle.nushell",
          "match": "(?<!=)[<>]"
        }
      ]
    },
    "comment":
    {
      "match": "(#.*)",
      "name": "comment.nushell"
    },
    "range":
    {
      "match": "(\\d+\\.\\.\\d+)",
      "name": "constant.nushell"
    },
    "digit":
    {
      "match": "(\\b[0-9]+\\b)",
      "name": "constant.numeric.nushell"
    },
    "parameter":
    {
      "match": "(\\s-[a-zA-Z_\\-]|--[a-zA-Z_\\-]{1,50})",
      "name": "variable.parameter.function.nushell"
    },
    "blockparam":
    {
      "match": "(\\|)([a-zA-Z0-9\\-\\_]+)(\\|)",
      "name": "variable.nushell",
      "captures":
      {
        "2":
        {
          "name": "variable.language.nushell"
        }
      }
    },
    "function":
    {
      "match": "\\b(def|def-env|extern)\\s+([\"'a-zA-Z0-9_\\- ]{1,})",
      "name": "entity.name",
      "captures":
      {
        "1":
        {
          "name": "entity.name.function.nushell"
        },
        "2":
        {
          "name": "entity.name.type.nushell"
        }
      }
    },
    "type":
    {
      "match": "([a-zA-Z0-9\\-_ ]+)(\\:[A-Za-z0-9\\-_ ]{1,})",
      "name": "storage",
      "captures":
      {
        "1":
        {
          "name": "storage.modifier.nushell"
        },
        "2":
        {
          "name": "storage.type.nushell"
        }
      }
    }
  }
}